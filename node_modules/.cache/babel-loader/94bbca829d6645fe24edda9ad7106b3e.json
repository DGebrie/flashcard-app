{"ast":null,"code":"var _jsxFileName = \"/Users/apple/DoThis/FlashcardApp/Project_Flashcards_Qualified_1/src/Layout/Flashcard.js\";\nimport React from \"react\";\n/**\n * A Card component is used during a Study session. It shows the front side\n * and can be flipped to the back.\n * @param {ComponentProps} props - Properties passed in for the component.\n * @param {Object} props.deck - A deck object representing a stack of cards.\n * @param {number} props.cardNum - The index of the card.\n * @param {boolean} props.flipped - Whether the card is currently flipped.\n * @param {function} props.flip - Flips the card when called.\n * @param {function} props.next - Goes to the next card when called.\n * @returns {ReactElement} JSX for a Card component.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Flashcard({\n  deck,\n  cardNumber,\n  flipped,\n  flip,\n  next\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-2\",\n    id: `card-${deck.id}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"card-title\",\n        children: [\"Card \", cardNumber + 1, \" of \", deck.cards.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: deck.cards[cardNumber][flipped ? \"back\" : \"front\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary mr-2\",\n        onClick: flip,\n        children: \"Flip\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), flipped && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mr-2\",\n        onClick: next,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Flashcard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"sources":["/Users/apple/DoThis/FlashcardApp/Project_Flashcards_Qualified_1/src/Layout/Flashcard.js"],"names":["React","Flashcard","deck","cardNumber","flipped","flip","next","id","cards","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA,OAApB;AAA6BC,EAAAA,IAA7B;AAAmCC,EAAAA;AAAnC,CAAnB,EAA8D;AAC3E,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,EAAE,EAAG,QAAOJ,IAAI,CAACK,EAAG,EAA/C;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,4BACQJ,UAAU,GAAG,CADrB,UAC4BD,IAAI,CAACM,KAAL,CAAWC,MADvC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBACGP,IAAI,CAACM,KAAL,CAAWL,UAAX,EAAuBC,OAAO,GAAG,MAAH,GAAY,OAA1C;AADH;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wBAAhC;AAAyD,QAAA,OAAO,EAAEC,IAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,EAUGD,OAAO,iBACN;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,sBAAhC;AAAuD,QAAA,OAAO,EAAEE,IAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;KArBuBL,S","sourcesContent":["import React from \"react\";\n\n/**\n * A Card component is used during a Study session. It shows the front side\n * and can be flipped to the back.\n * @param {ComponentProps} props - Properties passed in for the component.\n * @param {Object} props.deck - A deck object representing a stack of cards.\n * @param {number} props.cardNum - The index of the card.\n * @param {boolean} props.flipped - Whether the card is currently flipped.\n * @param {function} props.flip - Flips the card when called.\n * @param {function} props.next - Goes to the next card when called.\n * @returns {ReactElement} JSX for a Card component.\n */\nexport default function Flashcard({ deck, cardNumber, flipped, flip, next }) {\n  return (\n    <div className=\"card mt-2\" id={`card-${deck.id}`}>\n      <div className=\"card-body\">\n        <h4 className=\"card-title\">\n          Card {cardNumber + 1} of {deck.cards.length}\n        </h4>\n        <p className=\"card-text\">\n          {deck.cards[cardNumber][flipped ? \"back\" : \"front\"]}\n        </p>\n        <button type=\"button\" className=\"btn btn-secondary mr-2\" onClick={flip}>\n          Flip\n        </button>\n        {flipped && (\n          <button type=\"button\" className=\"btn btn-primary mr-2\" onClick={next}>\n            Next\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}